name: Build, test and release
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-info:
    name: Generate release info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release-info.outputs.version }}
      changelog: ${{ steps.release-info.outputs.changelog }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: jdx/mise-action@v3
      - id: release-info
        run: mise run ci:release-info

  checks:
    strategy:
      matrix:
        mise-task:
          - check:deadcode
          - check:golangci-lint
          - check:gosec
          - check:govet
          - check:govulncheck
          - check:staticcheck
          - ci:fmt
          - test
    name: |
      Run mise task: ${{ matrix.mise-task }}
    needs:
      - release-info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - run: mise run ${{ matrix.mise-task }}

  branch-protection-checkpoint:
    runs-on: ubuntu-latest
    needs:
      - checks
    name: Branch protection checkpoint
    steps:
      - run: echo "All checks passed :rocket:"

  tag-and-create-github-release:
    if: github.ref == 'refs/heads/main' && needs.release-info.outputs.changelog != ''
    name: Create new tag and GitHub release
    runs-on: ubuntu-latest
    needs:
      - release-info
      - checks
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release-info.outputs.version }}
          body: ${{ needs.release-info.outputs.changelog }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Write summary
        run: |
          echo "## :rocket: Release ${{ needs.release-info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "A new release is available over at https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-info.outputs.version }}." >> $GITHUB_STEP_SUMMARY
